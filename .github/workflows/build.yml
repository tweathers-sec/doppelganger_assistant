name: Build and Release

on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.3'  # Specify the Go version

      - name: Set up Docker (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh
          sudo usermod -aG docker $USER
          newgrp docker

      - name: Set up Docker on macOS
        if: matrix.os == 'macos-latest'
        uses: douglascamata/setup-docker-macos-action@v1-alpha

      - name: Create directories and build binaries
        run: |
          chmod +x ./build.sh
          ./build.sh

      - name: Configure Git
        run: |
          git config --global user.email "2996680+ralphte@users.noreply.github.com."
          git config --global user.name "Runner"

      - name: Create Tag
        id: create_tag
        run: |
          git tag -a v${{ github.run_number }} -m "Release v${{ github.run_number }}"
          git push origin v${{ github.run_number }}

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: build/
          asset_name: doppelganger_assistant_${{ matrix.os }}_${{ matrix.arch }}
          asset_content_type: application/octet-stream
        if: success()

      - name: List all files in build directory
        run: ls build/

      - name: Upload each file
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PAT }}
          file: build/*
          asset_name: doppelganger_assistant_${{ matrix.os }}_${{ matrix.arch }}
          tag: v${{ github.run_number }}
          overwrite: true
        if: success()
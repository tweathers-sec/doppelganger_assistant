name: Build and Release

on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        arch: [amd64, arm64]

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.3'  # Specify the Go version

      - name: Create directories and build binaries
        run: |
          chmod +x ./build.sh
          ./build.sh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/
          asset_name: doppelganger_assistant_${{ matrix.os }}_${{ matrix.arch }}
          asset_content_type: application/octet-stream

      - name: List all files in build directory
        run: ls build/